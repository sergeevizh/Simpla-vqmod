<?xml version="1.0" encoding="UTF-8"?>
<modification>
    <id>Комментарии к страницам</id>
    <version>1.0</version>
    <vqmver required="true">2.6.0</vqmver>
    <author>Polevik Yurii</author>

	<file name="api/Pages.php">
		<operation error="skip" info="">
            <search position="replace"><![CDATA[, visible]]></search>
            <add><![CDATA[, visible, allow_comment]]></add>
        </operation>
		<operation error="skip" info="">
            <search position="replace"><![CDATA[WHERE 1]]></search>
            <add><![CDATA[WHERE 1 $comments_filter]]></add>
        </operation>
		<operation error="skip" info="">
            <search position="after"><![CDATA[$visible_filter = '';]]></search>
            <add><![CDATA[$comments_filter = '';]]></add>
        </operation>
		<operation error="skip" info="">
            <search position="after" offset="2"><![CDATA[if(isset($filter['visible']))]]></search>
            <add><![CDATA[if(isset($filter['allow_comment']))
			$comments_filter = $this->db->placehold('AND allow_comment = ?', intval($filter['allow_comment']));]]></add>
        </operation>
	</file>

	
	<file name="simpla/PageAdmin.php">
		<operation error="skip" info="">
            <search position="after"><![CDATA[post('visible']]></search>
            <add><![CDATA[$page->allow_comment = $this->request->post('allow_comment', 'boolean');]]></add>
        </operation>
	</file>	
	<file name="simpla/CommentsAdmin.php">
		<operation error="skip" info="">
            <search position="replace" offset="23"><![CDATA[$products_ids = array();]]></search>
            <add><![CDATA[
  	$object_ids = array();
  	foreach($comments as $comment)
		$object_ids[$comment->type][] = $comment->object_id;
	
	$data_object = array();
	foreach($object_ids as $type=>$ids){
		switch($type){
			case 'post':
				$callback = array($this->blog, 'get_posts');
				break;
			case 'product':
				$callback = array($this->products, 'get_products');
				break;
			case 'page':
				$callback = array($this->pages, 'get_pages');
				break;
			default: 
				continue 2;
				break;
		}
		
		$objects = call_user_func($callback, array('id'=>$ids));
		
		foreach($objects as $p)
			$data_object[$type][$p->id] = $p;
	}
	
	if($data_object){
		foreach($comments as &$comment){
			if(isset($data_object[$comment->type][$comment->object_id]))
				$comment->{$comment->type} = $data_object[$comment->type][$comment->object_id];
		}
	}
			]]></add>
        </operation>
	</file>
	<file name="simpla/design/html/comments.tpl">
		<operation error="skip" info="">
            <search position="after"><![CDATA[к статье ]]></search>
            <add><![CDATA[{elseif $comment->type == 'page'}
			к странице <a target="_blank" href="{$config->root_url}/{$comment->page->url}#comment_{$comment->id}">{$comment->page->name}</a>]]></add>
        </operation>
		<operation error="skip" info="">
            <search position="after"><![CDATA[{if $type == 'blog'}]]></search>
            <add><![CDATA[<li {if $type == 'page'}class="selected"{/if}><a href='{url keyword=null type=page}'>К страницам</a></li>]]></add>
        </operation>
	</file>
	<file name="simpla/design/html/page.tpl">
		<operation error="skip" info="">
            <search position="after" offset="1"><![CDATA[id="active_checkbox"]]></search>
            <add><![CDATA[<div class="checkbox">
			<input name=allow_comment value='1' type="checkbox" id="comments_checkbox" {if $page->allow_comment}checked{/if}/> <label for="comments_checkbox">Разрешить комментарии</label>
		</div>]]></add>
        </operation>
	</file>
	
	<file name="view/PageView.php">
		<operation error="skip" info="">
            <search position="before"><![CDATA[$this->design->assign('page', $page);]]></search>
            <add><![CDATA[
// Принимаем комментарий
		if ($page->allow_comment){
			
			if ($this->request->method('post') && $this->request->post('comment'))
			{
				$comment = new stdClass;
				$comment->name = $this->request->post('name');
				$comment->text = $this->request->post('text');
				$captcha_code =  $this->request->post('captcha_code', 'string');

				// Передадим комментарий обратно в шаблон - при ошибке нужно будет заполнить форму
				$this->design->assign('comment_text', $comment->text);
				$this->design->assign('comment_name', $comment->name);
				
				// Проверяем капчу и заполнение формы
				if ($_SESSION['captcha_code'] != $captcha_code || empty($captcha_code))
				{
					$this->design->assign('error', 'captcha');
				}
				elseif (empty($comment->name))
				{
					$this->design->assign('error', 'empty_name');
				}
				elseif (empty($comment->text))
				{
					$this->design->assign('error', 'empty_comment');
				}			
				else
				{
					// Создаем комментарий
					$comment->object_id = $page->id;
					$comment->type      = 'page';
					$comment->ip        = $_SERVER['REMOTE_ADDR'];
					
					// Если были одобренные комментарии от текущего ip, одобряем сразу
					$this->db->query("SELECT 1 FROM __comments WHERE approved=1 AND ip=? LIMIT 1", $comment->ip);
					if($this->db->num_rows()>0)
						$comment->approved = 1;
					
					// Добавляем комментарий в базу
					$comment_id = $this->comments->add_comment($comment);

					
					// Отправляем email
					$this->notify->email_comment_admin($comment_id);				
					
					// Приберем сохраненную капчу, иначе можно отключить загрузку рисунков и постить старую
					unset($_SESSION['captcha_code']);
					header('location: '.$_SERVER['REQUEST_URI'].'#comment_'.$comment_id);
				}			
			}
		
			// Отзывы
			$comments = $this->comments->get_comments(array('type'=>'page', 'object_id'=>$page->id, 'approved'=>1, 'ip'=>$_SERVER['REMOTE_ADDR']));
			$this->design->assign('comments', $comments);
		}
]]></add>
        </operation>
	</file>
	
	
</modification>